name: CI

on:
  push:
    branches:
      - '**'
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: ci-${{ github.workflow }}-${{ github.event.pull_request.head.ref || github.ref_name }}
  cancel-in-progress: true

env:
  ROOT: "${{ github.workspace }}"
  SCRIPTS: "${{ github.workspace }}/.github/scripts"
  SERIOUS_PYTHON_SITE_PACKAGES: "${{ github.workspace }}/site-packages"
  UV_PYTHON: "3.12"

jobs:
  macos:
    name: Test on macOS
    runs-on: macos-15
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: kuhnroyal/flutter-fvm-config-action/setup@v3
        with:
          path: '.fvmrc'
          cache: true

      - name: Run tests
        shell: bash
        working-directory: "src/serious_python/example/flet_example"
        run: |
          dart run serious_python:main package app/src -p Darwin -r flet
          flutter test integration_test --device-id macos

  ios:
    name: Test on iOS
    runs-on: macos-15
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: kuhnroyal/flutter-fvm-config-action/setup@v3
        with:
          path: '.fvmrc'
          cache: true

      - name: Launch iOS Simulator
        id: ios-sim
        uses: futureware-tech/simulator-action@v4
        with:
          model: 'iPhone 16'
          shutdown_after_job: true
          wait_for_boot: true

      - name: Run tests
        shell: bash
        working-directory: "src/serious_python/example/flet_example"
        run: |
          dart run serious_python:main package app/src -p iOS -r flet
          flutter drive -d ${{ steps.ios-sim.outputs.udid }} --driver=test_driver/integration_test.dart --target=integration_test/app_test.dart

  android:
    name: Test on Android
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: kuhnroyal/flutter-fvm-config-action/setup@v3
        with:
          path: '.fvmrc'
          cache: true

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Gradle cache
        uses: gradle/actions/setup-gradle@v3

      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd

      - name: Cache Android SDK
        uses: actions/cache@v4
        with:
          path: |
            /usr/local/lib/android/sdk/ndk
            /usr/local/lib/android/sdk/cmake
            /usr/local/lib/android/sdk/build-tools
            /usr/local/lib/android/sdk/platforms
            /usr/local/lib/android/sdk/platform-tools
            /usr/local/lib/android/sdk/system-images
          key: android-sdk-${{ runner.os }}-api33-ndk25.1
          restore-keys: android-sdk-${{ runner.os }}-api33-ndk25.1

      - name: Run Android Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          avd-name: android_emulator
          api-level: 33
          target: google_atd
          arch: x86_64
          profile: pixel_5
          sdcard-path-or-size: 128M
          ram-size: 2048M
          disk-size: 4096M
          emulator-port: 5554
          disable-animations: true
          emulator-options: -no-window -noaudio -no-boot-anim -memory 2048 -wipe-data -cache-size 1000 -partition-size 8192
          pre-emulator-launch-script: |
            sdkmanager --list_installed
          script: |
            cd src/serious_python/example/flet_example && dart run serious_python:main package app/src -p Android -r flet
            cd src/serious_python/example/flet_example && flutter test integration_test --device-id emulator-5554

  windows:
    name: Test on Windows
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: kuhnroyal/flutter-fvm-config-action/setup@v3
        with:
          path: '.fvmrc'
          cache: true

      - name: Run tests
        shell: bash
        working-directory:  "src/serious_python/example/flet_example"
        run: |
          dart run serious_python:main package app/src -p Windows -r flet
          flutter test integration_test -d windows

  linux:
    name: Test on Linux
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: kuhnroyal/flutter-fvm-config-action/setup@v3
        with:
          path: '.fvmrc'
          cache: true

      - name: Install desktop deps
        run: |
          sudo apt-get update --allow-releaseinfo-change
          sudo apt-get install -y \
            xvfb \
            libgtk-3-dev \
            libgstreamer1.0-dev \
            libgstreamer-plugins-base1.0-dev \
            libgstreamer-plugins-bad1.0-dev \
            gstreamer1.0-plugins-base \
            gstreamer1.0-plugins-good \
            gstreamer1.0-plugins-bad \
            gstreamer1.0-plugins-ugly \
            gstreamer1.0-libav \
            gstreamer1.0-tools \
            gstreamer1.0-x \
            gstreamer1.0-alsa \
            gstreamer1.0-gl \
            gstreamer1.0-gtk3 \
            gstreamer1.0-qt5 \
            gstreamer1.0-pulseaudio

      - name: Run tests
        shell: bash
        working-directory: "src/serious_python/example/flet_example"
        run: |
          dart run serious_python:main package app/src -p Linux -r flet
          xvfb-run flutter test integration_test -d linux

  linux-arm64:
    name: Test on Linux ARM64
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get Flutter version from ".fvmrc"
        uses: kuhnroyal/flutter-fvm-config-action/config@v3
        id: fvm-config-action
        with:
          path: '.fvmrc'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ steps.fvm-config-action.outputs.FLUTTER_VERSION }}
          channel: 'master'  # https://github.com/subosito/flutter-action/issues/345#issuecomment-2657332687
          cache: true

      - name: Install deps
        shell: bash
        run: |
          # sudo sed -i "/#\$nrconf{restart} = 'i';/s/.*/\$nrconf{restart} = 'a';/" /etc/needrestart/needrestart.conf
          sudo apt-get update -y --allow-releaseinfo-change
          sudo apt-get install -y clang ninja-build xvfb libgtk-3-dev gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav

      - name: Run tests
        shell: bash
        working-directory: "src/serious_python/example/flet_example"
        run: |
          flutter pub get
          dart run serious_python:main package app/src -p Linux -r flet
          xvfb-run flutter test integration_test -d linux

  publish:
    name: Publish to pub.dev
    needs:
      - macos
      - ios
      - android
      - windows
      - linux
      - linux-arm64
    runs-on: ubuntu-22.04
    # if: startsWith(github.ref, 'refs/tags/v')
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup uv
        uses: astral-sh/setup-uv@v6

      - name: Setup Flutter
        uses: kuhnroyal/flutter-fvm-config-action/setup@v3
        with:
          path: '.fvmrc'
          cache: true

      - name: Compute PKG_VER
        id: ver
        shell: bash
        run: |
          PKG_VER="${GITHUB_REF_NAME#v}"
          echo "PKG_VER=$PKG_VER" | tee -a "$GITHUB_ENV"

      - name: Configure pub.dev credentials
        # if: ${{ secrets.PUB_DEV_TOKEN != '' }}
        env:
          PUB_DEV_TOKEN: ${{ secrets.PUB_DEV_TOKEN }}
        run: |
          mkdir -p $HOME/.config/dart
          echo "$PUB_DEV_TOKEN" | base64 --decode > $HOME/.config/dart/pub-credentials.json

      - name: Patch pubspec versions
        shell: bash
        working-directory: "src"
        run: |
          for pkg in \
            "serious_python" \
            "serious_python_platform_interface" \
            "serious_python_android" \
            "serious_python_darwin" \
            "serious_python_windows" \
            "serious_python_linux"; do
            uv run "$SCRIPTS/patch_pubspec.py" "$pkg/pubspec.yaml" "$PKG_VER"
          done

      - name: Publish packages
        shell: bash
        run: |
          publish_pkg () { 
            pushd "$1" >/dev/null
            dart pub publish --dry-run
            popd >/dev/null
          }

          publish_pkg src/serious_python_platform_interface
          sleep 600
          publish_pkg src/serious_python_android
          publish_pkg src/serious_python_darwin
          publish_pkg src/serious_python_windows
          publish_pkg src/serious_python_linux
          sleep 600
          publish_pkg src/serious_python